/* 
 * $Id$
 * 
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 * 
 * Copyright (C) 2014-2021 the original authors or authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.acl.encoding

import io.sarl.acl.encoding.bitefficient.BitEfficientAclCodec
import io.sarl.acl.encoding.bitefficient.BitEfficientEnvelopeCodec
import io.sarl.acl.encoding.json.JsonAclCodec
import io.sarl.acl.encoding.json.JsonEnvelopeCodec
import io.sarl.acl.message.AclRepresentation
import io.sarl.acl.encoding.xml.XmlAclCodec
import io.sarl.acl.encoding.xml.XmlEnvelopeCodec
import io.sarl.acl.encoding.string.StringAclCodec
import io.sarl.acl.encoding.string.StringEnvelopeCodec

/**
 * This interface describes the service for creating the ACL message encoding/decoding services.
 * 
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 * @since 0.12
 */
class DefaultAclMessageServiceFactory implements AclMessageServiceFactory {

	@Pure
    override newContentEncodingService(representation : AclRepresentation) : AclMessageContentEncodingService {
    	switch (representation) {
	    	case BIT_EFFICIENT: {
	    		return new BitEfficientAclCodec
	    	}
	    	case JSON: {
				return new JsonAclCodec
	    	}
	    	case XML: {
				return new XmlAclCodec
	    	}
	    	case STRING: {
				return new StringAclCodec
	    	}
	    	default: {
				throw new IllegalArgumentException("Illegal ACL representation: " + representation)
	    	}
    	}
    }

	@Pure
    override newEnvelopeEncodingService(representation : AclRepresentation) : AclMessageEnvelopeEncodingService {
    	switch (representation) {
	    	case BIT_EFFICIENT: {
	    		return new BitEfficientEnvelopeCodec
	    	}
	    	case JSON: {
				return new JsonEnvelopeCodec
	    	}
	    	case XML: {
				return new XmlEnvelopeCodec
	    	}
	    	case STRING: {
				return new StringEnvelopeCodec
	    	}
	    	default: {
				throw new IllegalArgumentException("Illegal ACL representation: " + representation)
	    	}
    	}
    }

}
