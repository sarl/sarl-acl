/* 
 * $Id$
 * 
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 * 
 * Copyright (C) 2014-2021 the original authors or authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.acl.encoding

import io.sarl.acl.message.AclMessage
import io.sarl.acl.message.AclMessageContentFactory
import javax.inject.Inject

/** 
 * Abstract imlpementation of the encoding service for the content of the ACL messages.
 * 
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 * @since 0.12
 */
abstract class AbstractAclMessageContentEncodingService extends AbstractAclMessageEncodingService implements AclMessageContentEncodingService {

	var contentFactory : AclMessageContentFactory

	/** Replies the content factory.
	 *
	 * @return the content factory.
	 */
	@Pure
	def getContentFactory : AclMessageContentFactory {
		if (this.contentFactory === null) {
			this.contentFactory = AclMessage::defaultCreateContentFactory
		}
		return this.contentFactory
	}

	/** Change the content factory.
	 *
	 * @param factory the content factory.
	 */
	@Inject
	def setContentFactory(factory : AclMessageContentFactory) {
		this.contentFactory = factory
	}

}
