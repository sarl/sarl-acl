/* 
 * $Id$
 * 
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 * 
 * Copyright (C) 2014-2021 the original authors or authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.acl.encoding

import io.sarl.acl.message.AclMessage
import io.sarl.acl.message.AclMessageContent
import io.sarl.acl.message.AclRepresentation

/** 
 * This interface describes the encoding service for the content of the ACL messages.
 * 
 * @author $Author: sgalland$
 * @author $Author: ngaud$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 * @since 0.12
 */
interface AclMessageContentEncodingService {

	/** Replies the ACL representation that is supported by this service. */
	@Pure
	def getAclRepresentation : AclRepresentation

	/** 
	 * This method encodes the content of an ACL message.
	 * 
	 * @param aMsg the ACLMessage containing the content.
	 * @return the encoded content.
	 */
	@Pure
    def encode(aMsg : AclMessage) : byte[]
    
    /**
     * This method decodes the content of an ACL message.
     * 
     * @param byteMsg the ACLMessage encoded in byte array (payload)
     * @param startOffset the index of the first byte to read. Default is {@code 0}.
     * @param endOffset the index of the byte following the last byte to read. By default end of the buffer.
     * @return the decoded content.
     */
	@Pure
    def decode(byteMsg : byte[], startIndex : int = 0, endIndex : int = -1) : AclMessageContent

}
