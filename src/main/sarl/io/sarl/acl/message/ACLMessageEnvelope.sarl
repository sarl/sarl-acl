/* 
 * $Id$
 * 
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 * 
 * Copyright (C) 2014-2021 the original authors or authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.acl.message

import java.util.Collection
import java.util.UUID
import java.util.Arrays
import java.util.Date
import java.util.Properties

/** 
 * This interface describes the Envelope of a given ACL Message as defined by FIPA.
 * 
 * @see <a href="http://www.fipa.org/specs/fipa00085/SC00085J.html">FIPA Agent Message Transport Envelope Representation</a>
 * 
 * @author $Author: sgalland$
 * @author $Author: ngaud$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
interface ACLMessageEnvelope {

	/** 
	 * Gets the list of recipients of the ACL Message. 
	 * @return the list of recipients of the ACL Message. 
	 */
	def getTo : Collection<UUID> 
	
	/**
	 * Sets the list of recipients of the ACL Message. 
	 * @param addresses is a collection of {@link AgentAddress}
	 */
	def setTo(addresses : Collection<UUID>)

	/** 
	 * Sets the list of recipients of the ACL Message. 
	 * @param addresses is a collection of {@link AgentAddress}
	 */
	def setTo(addresses : UUID*) {
		setTo(Arrays::asList(addresses))
	}

	/** 
	 * Gets the agent address of the sender of the ACL Message. 
	 * @return the agent address of the sender of the ACL Message. 
	 */
	def getFrom : UUID
	
	/**
	 * Sets the sender of the ACL Message. 
	 * @param address is an {@link AgentAddress}
	 */
	def setFrom(address : UUID)
	
	/**
	 * Gets the ACL Representation of the content of the ACL Message. 
	 * @return the ACL Representation of the content of the ACL Message. 
	 */
	def getAclRepresentation : String
	
	/**
	 * Sets the ACL Representation of the content of the ACL Message.
	 * @param aclRepresentation - the ACL Representation of the content of the ACL Message.
	 */
	def setAclRepresentation(aclRepresentation : String)
	
	/**
	 * Gets the date of the ACL Message. 
	 * @return the date of the ACL Message. 
	 */
	def getDate : Date
	
	/**
	 * Sets the date of the ACL Message.
	 * @param date
	 */
	def setDate(date : Date)
	
	/**
	 * Gets the comments of the ACL Message.
	 * @return the comments
	 */
	def getComments : String
	
	/**
	 * Sets the comments of the ACL Message.
	 * @param comments
	 */
	def setComments(comments : String)
	
	/**
	 * Gets the length of the payload of the ACL Message. 
	 * @return the length of the payload of the ACL Message
	 */
	def getPayloadLength : Long
	
	/**
	 * Sets the length of the payload of the ACL Message.
	 * @param payloadLength
	 */
	def setPayloadLength(payloadLength : Long)
	
	/**
	 * Gets the encoding of the payload of the ACL Message. 
	 * @return the encoding of the payload of the ACL Message. 
	 */
	def getPayloadEncoding : String

	/**
	 * Gets the encoding of the payload of the ACL Message.
	 * @param payloadEncoding
	 */
	def setPayloadEncoding(payloadEncoding : String)
	
	/**
	 * Gets the list of intended receivers of the ACL Message. 
	 * @return the list of intended receivers of the ACL Message. 
	 */
	def getIntendedReceiver : Collection<UUID>
	
	/**
	 * Sets the list of intended receivers of the ACL Message.
	 * @param intendedReceivers is a list of {@link AgentAddress}
	 */
	def setIntendedReceiver(intendedReceivers : Collection<UUID>)
	/** 
	 * Sets the list of intended receivers of the ACL Message.
	 * @param intendedReceivers is a list of {@link AgentAddress}
	 */
	def setIntendedReceiver(intendedReceivers : UUID*) {
		setIntendedReceiver(Arrays::asList(intendedReceivers))
	}

	/** 
	 * Gets the transport behaviour used to send and receive this ACL Message. 
	 * @return the transport behaviour used to send and receive this ACL Message. 
	 */
	def getTransportBehaviour : Properties
	
	/**
	 * Sets the transport behaviour used to send and receive this ACL Message.
	 * @param transportBehaviour
	 */
	def setTransportBehaviour(transportBehaviour : Properties)
	
}
