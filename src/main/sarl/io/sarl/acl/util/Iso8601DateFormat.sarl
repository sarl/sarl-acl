/* 
 * $Id$
 * 
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 * 
 * Copyright (C) 2014-2021 the original authors or authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.acl.util

import java.text.DateFormat
import java.text.DecimalFormat
import java.text.FieldPosition
import java.text.ParsePosition
import java.util.Date
import java.util.GregorianCalendar

/** 
 * Formater for ISO8601 dates.
 * 
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 * @since 0.12
 */
class Iso8601DateFormat extends DateFormat {

	new {
		this.numberFormat = new DecimalFormat
		this.calendar = new GregorianCalendar
	}

	override format(date : Date, toAppendTo : StringBuffer, fieldPosition : FieldPosition) : StringBuffer {
		val dt = Iso8601DateTimeUtil::format(date)
		toAppendTo.append(dt)
		return toAppendTo
	}

	override parse(source : String, position : ParsePosition) : Date {
		try {
			return Iso8601DateTimeUtil::parse(source, position)
		} catch (e : Throwable) {
			return null
		}
	}

	override parse(source : String) : Date {
		Iso8601DateTimeUtil::parse(source)
	}

	override clone : Object {
		return this
	}

}
