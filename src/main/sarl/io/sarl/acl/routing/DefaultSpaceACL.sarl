/* 
 * $Id$
 * 
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 * 
 * Copyright (C) 2014-2021 the original authors or authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.acl.routing

import io.sarl.acl.message.AclMessage
import io.sarl.core.DefaultContextInteractions
import java.util.UUID

/** 
 * Skill to emit ACL messages in the default space.
 * 
 * @author $Author: sgalland$
 * @author $Author: ngaud$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 * @since 0.12
 */
skill DefaultSpaceACL implements ACL {

	uses DefaultContextInteractions

	override sendAclMessageTo(message : AclMessage, agents : UUID*) {
		if (message !== null) {
			if (agents.length > 1) {
				val set = <UUID>newTreeSet(null)
				set.addAll(agents)
				emit(message) [set.contains(it.ID)]
			} else {
				val id = agents.get(0)
				emit(message) [it.ID == id]
			}
		}
	}

}

